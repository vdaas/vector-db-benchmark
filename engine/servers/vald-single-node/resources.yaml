---
# Source: vald/templates/agent/pdb.yaml
#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vald-agent-ngt
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.7.6
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: vald
    app.kubernetes.io/version: v1.7.6
    app.kubernetes.io/component: agent
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: vald-agent-ngt
---
# Source: vald/templates/agent/configmap.yaml
#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: vald-agent-ngt-config
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.7.6
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: vald
    app.kubernetes.io/version: v1.7.6
    app.kubernetes.io/component: agent
data:
  config.yaml: |
    ---
    version: v0.0.0
    time_zone: UTC
    logging:
      format: raw
      level: debug
      logger: glg
    server_config:
      servers:
        - name: grpc
          host: 0.0.0.0
          port: 8081
          grpc:
            bidirectional_stream_concurrency: 20
            connection_timeout: ""
            enable_reflection: true
            header_table_size: 0
            initial_conn_window_size: 0
            initial_window_size: 0
            interceptors:
            - RecoverInterceptor
            keepalive:
              max_conn_age: ""
              max_conn_age_grace: ""
              max_conn_idle: ""
              min_time: 60s
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_header_list_size: 0
            max_receive_message_size: 0
            max_send_message_size: 0
            read_buffer_size: 0
            write_buffer_size: 0
          mode: GRPC
          network: tcp
          probe_wait_time: 3s
          restart: true
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      health_check_servers:
        - name: liveness
          host: 0.0.0.0
          port: 3000
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 5s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
        - name: readiness
          host: 0.0.0.0
          port: 3001
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 0s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      metrics_servers:
      startup_strategy:
        - liveness
        - grpc
        - readiness
      full_shutdown_duration: 600s
      tls:
        ca: /path/to/ca
        cert: /path/to/cert
        enabled: false
        insecure_skip_verify: false
        key: /path/to/key
    observability:
      enabled: false
      otlp:
        collector_endpoint: ""
        trace_batch_timeout: "1s"
        trace_export_timeout: "1m"
        trace_max_export_batch_size: 1024
        trace_max_queue_size: 256
        metrics_export_interval: "1s"
        metrics_export_timeout: "1m"
        attribute:
          namespace: "_MY_POD_NAMESPACE_"
          pod_name: "_MY_POD_NAME_"
          node_name: "_MY_NODE_NAME_"
          service_name: "vald-agent-ngt"
      metrics:
        enable_cgo: true
        enable_goroutine: true
        enable_memory: true
        enable_version_info: true
        version_info_labels:
        - vald_version
        - server_name
        - git_commit
        - build_time
        - go_version
        - go_os
        - go_arch
        - ngt_version
      trace:
        enabled: false
    ngt:
      auto_create_index_pool_size: 10000
      auto_index_check_duration: 10s
      auto_index_duration_limit: 1m
      auto_index_length: 100
      auto_save_index_duration: 35m
      broken_index_history_limit: 0
      bulk_insert_chunk_size: 10
      creation_edge_size: 20
      default_epsilon: 0.1
      default_pool_size: 10000
      default_radius: -1
      dimension: 784
      distance_type: l2
      enable_copy_on_write: false
      enable_in_memory_mode: true
      enable_proactive_gc: false
      index_path: ""
      initial_delay_max_duration: 3m
      kvsdb:
        concurrency: 6
      load_index_timeout_factor: 1ms
      max_load_index_timeout: 10m
      min_load_index_timeout: 3m
      object_type: float
      search_edge_size: 10
      vqueue:
        delete_buffer_pool_size: 5000
        insert_buffer_pool_size: 10000
---
# Source: vald/templates/agent/svc.yaml
#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: vald-agent-ngt
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.7.6
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: vald
    app.kubernetes.io/version: v1.7.6
    app.kubernetes.io/component: agent
spec:
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: readiness
      port: 3001
      targetPort: 3001
      protocol: TCP
  selector:
    app.kubernetes.io/name: vald
    app.kubernetes.io/component: agent
  clusterIP: None
  type: ClusterIP
---
# Source: vald/templates/agent/statefulset.yaml
#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vald-agent-ngt
  labels:
    app: vald-agent-ngt
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.7.6
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: vald
    app.kubernetes.io/version: v1.7.6
    app.kubernetes.io/component: agent
spec:
  serviceName: vald-agent-ngt
  podManagementPolicy: Parallel
  replicas: 4
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-agent-ngt
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-agent-ngt
        app.kubernetes.io/name: vald
        app.kubernetes.io/instance: vald
        app.kubernetes.io/component: agent
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - vald-agent-ngt
                topologyKey: kubernetes.io/hostname
              weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      containers:
        - name: vald-agent-ngt
          image: "vdaas/vald-agent-ngt:v1.7.6"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 200
            periodSeconds: 5
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: vald-agent-ngt-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationGracePeriodSeconds: 120
      volumes:
        - name: vald-agent-ngt-config
          configMap:
            defaultMode: 420
            name: vald-agent-ngt-config
      priorityClassName: default-vald-agent-ngt-priority
status:
---
# Source: vald/templates/agent/priorityclass.yaml
#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: default-vald-agent-ngt-priority
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.7.6
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: vald
    app.kubernetes.io/version: v1.7.6
    app.kubernetes.io/component: agent
value: 1000000000
preemptionPolicy: Never
globalDefault: false
description: "A priority class for Vald agent."
